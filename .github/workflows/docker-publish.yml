name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1. Run Unit Tests for NestJS
  unit_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16' # เลือก version ที่ตรงกับ project ของคุณ

      - name: Install dependencies
        run: npm ci

      - name: Run Unit Tests
        run: npm run test:ci

      - name: Upload Unit Test Results
        if: success()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: coverage/

  # 2. Run CodeQL Analysis
  codeql:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # 3. SonarQube Quality and Security Gates
  sonarqube:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK (for SonarQube Scanner)
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Install dependencies
        run: npm ci

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          npx sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.organization=your_organization_key \
            -Dsonar.sources=. \
            -Dsonar.tests=src \
            -Dsonar.typescript.lcov.reportPaths=coverage/lcov.info \
            -Dsonar.testExecutionReportPaths=coverage/test-report.xml \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Quality Gate Check
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }} "https://sonarcloud.io/api/qualitygates/project_status?projectKey=your_project_key" \
          | grep '"status":"OK"' || { echo "Quality gate failed"; exit 1; }

      - name: Security Gate Check
        run: |
          curl -u ${{ secrets.SONAR_TOKEN }} "https://sonarcloud.io/api/security_hotspots/search?projectKey=your_project_key" \
          | grep '"vulnerabilities":0' || { echo "Security gate failed"; exit 1; }

  # 4. Build and Push Docker Image
  build_and_push_docker:
    runs-on: ubuntu-latest
    needs: unit_test # Ensure unit tests passed before building Docker image
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }} # Docker Hub password/token

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nestjs-app:latest .

      - name: Push Docker Image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/nestjs-app:latest
